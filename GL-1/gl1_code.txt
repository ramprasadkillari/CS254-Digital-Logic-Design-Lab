
-- Full Adder 

----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:17:04 02/06/2019 
-- Design Name: 
-- Module Name:    gl1_fa - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity gl1_fa is
port(
  a: in std_logic;
  b: in std_logic;
  c1: in std_logic;
  s: out std_logic;
  c2: out std_logic);
end gl1_fa;

architecture rtl of gl1_fa is
signal temp:std_logic;
begin
  process(a, b, c1, temp) is
  begin
  	temp <= (a and not(b)) or (b and not(a));
    s <= (temp and not(c1)) or (c1 and not(temp));
    c2 <= (c1 and temp) or (a and b);
  end process;
end rtl;


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- 7 bit adder

----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:20:17 02/06/2019 
-- Design Name: 
-- Module Name:    gl1_7ba - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity gl1_7ba is
port(
  A: in std_logic_vector(6 downto 0);
  B: in std_logic_vector(6 downto 0);
  c1: in std_logic;
  S: out std_logic_vector(6 downto 0);
  c2: out std_logic);
end gl1_7ba;

architecture rtl of gl1_7ba is

component gl1_fa is
port(
  a: in std_logic;
  b: in std_logic;
  c1: in std_logic;
  s: out std_logic;
  c2: out std_logic);
end component;

signal A_in, B_in, S_out: std_logic_vector(6 downto 0);
signal c_in, c0_out, c1_out, c2_out, c3_out, c4_out, c5_out, c6_out : std_logic;

begin

ADDR0: gl1_fa port map(a => A_in(0), b=> B_in(0), c1 => c_in, s => S_out(0), c2 => c0_out );
ADDR1: gl1_fa port map(a => A_in(1), b=> B_in(1), c1 => c0_out, s => S_out(1), c2 => c1_out );
ADDR2: gl1_fa port map(a => A_in(2), b=> B_in(2), c1 => c1_out, s => S_out(2), c2 => c2_out );
ADDR3: gl1_fa port map(a => A_in(3), b=> B_in(3), c1 => c2_out, s => S_out(3), c2 => c3_out );
ADDR4: gl1_fa port map(a => A_in(4), b=> B_in(4), c1 => c3_out, s => S_out(4), c2 => c4_out );
ADDR5: gl1_fa port map(a => A_in(5), b=> B_in(5), c1 => c4_out, s => S_out(5), c2 => c5_out );
ADDR6: gl1_fa port map(a => A_in(6), b=> B_in(6), c1 => c5_out, s => S_out(6), c2 => c6_out );

  process(A, B, c1, c_in,A_in, B_in, S_out, c0_out, c1_out, c2_out, c3_out, c4_out, c5_out, c6_out ) is
  begin
  	A_in <= A;
    B_in <= B;
    c_in <= c1;
    S <= S_out;
    c2 <= c6_out;
  end process;
end rtl;



----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


-- 7 bit subtractor

----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:40:08 02/06/2019 
-- Design Name: 
-- Module Name:    gl1_7bs - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity gl1_7bs is
PORT(
         A : IN  std_logic_vector(6 downto 0);
         B : IN  std_logic_vector(6 downto 0);
         S : OUT  std_logic_vector(6 downto 0);
         c2 : OUT  std_logic
        );
end gl1_7bs;

architecture Behavioral of gl1_7bs is

COMPONENT gl1_7ba
    PORT(
         A : IN  std_logic_vector(6 downto 0);
         B : IN  std_logic_vector(6 downto 0);
         c1 : IN  std_logic;
         S : OUT  std_logic_vector(6 downto 0);
         c2 : OUT  std_logic
        );
    END COMPONENT;

signal A_in, B_in,S_out,S2_out: std_logic_vector(6 downto 0);
signal c1_in, c2_out,c3_out: std_logic;

begin

  -- Connect DUT
  ADDR7: gl1_7ba port map(A => A_in,B => B_in, c1 => c1_in, S => S_out, c2 => c2_out);
  ADDR8: gl1_7ba port map(A => "0000001",B => not(S_out),c1 => '0',S => S2_out, c2 => c3_out);
  process(A, B,A_in,B_in,S_out,S2_out, c1_in, c2_out,c3_out ) is
  begin		
    A_in <= A;
	 B_in <= not(B);
	 if (c2_out = '0') then
    	 S <= S2_out;
	 else
   	 S <= S_out;
	end if;
    c1_in <= '1'; 
	c2 <= not(c2_out);
	 end process;
end Behavioral;


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- 4 bit mutiplier

----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    16:40:41 02/06/2019 
-- Design Name: 
-- Module Name:    ql1_mul - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:29:21 02/06/2019 
-- Design Name: 
-- Module Name:    seven_bit_adder - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity ql1_mul is
    Port ( A : in  STD_LOGIC_VECTOR (3 downto 0);
           B : in  STD_LOGIC_VECTOR (3 downto 0);
           ot : out  STD_LOGIC_VECTOR (6 downto 0));
end ql1_mul;

architecture Behavioral of ql1_mul is
component gl1_7ba is 
port(A : in STD_LOGIC_VECTOR(6 downto 0);
B : in STD_LOGIC_VECTOR(6 downto 0);
c1 : in STD_LOGIC;
S : out STD_LOGIC_VECTOR(6 downto 0);
c2 : out STD_LOGIC
);
end component;
signal si : STD_LOGIC_VECTOR(6 downto 0);
signal si1 : STD_LOGIC_VECTOR(6 downto 0);
signal si2 : STD_LOGIC_VECTOR(6 downto 0);
signal si3 : STD_LOGIC_VECTOR(6 downto 0);
signal ot1 : STD_LOGIC_VECTOR(6 downto 0);
signal ot2 : STD_LOGIC_VECTOR(6 downto 0);
signal car : STD_LOGIC_VECTOR(2 DOWNTO 0);
begin
si(0) <= A(0) and B(0);
si(1) <= A(1) and B(0);
si(2) <= A(2) and B(0);
si(3) <= A(3) and B(0);
si(4) <= '0';
si(5) <= '0';
si(6) <= '0';

si1(0) <= '0';
si1(1) <= A(0) and B(1);
si1(2) <= A(1) and B(1);
si1(3) <= A(2) and B(1);
si1(4) <= A(3) and B(1);
si1(5) <= '0';
si1(6) <= '0';

si2(0) <= '0';
si2(1) <= '0';
si2(2) <= A(0) and B(2);
si2(3) <= A(1) and B(2);
si2(4) <= A(2) and B(2);
si2(5) <= A(3) and B(2);
si2(6) <= '0';

si3(0) <= '0';
si3(1) <= '0';
si3(2) <= '0';
si3(3) <= A(0) and B(3);
si3(4) <= A(1) and B(3);
si3(5) <= A(2) and B(3);
si3(6) <= A(3) and B(3);

DUT0: gl1_7ba port map(A => si,B => si1,c1 => '0',S => ot1,c2 => car(0));
DUT1: gl1_7ba port map(A => ot1,B => si2,c1 => car(0),S => ot2,c2 => car(1));
DUT2: gl1_7ba port map(A => ot2,B => si3,c1 => car(1),S => ot,c2 => car(2));
end Behavioral;






----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



-- ganit code

----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    15:58:19 02/06/2019 
-- Design Name: 
-- Module Name:    gl1_gan - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity gl1_gan is
port(
  A: in std_logic_vector(6 downto 0);
  B: in std_logic_vector(6 downto 0);
  S1: in std_logic;
  S2: in std_logic;
  S3: in std_logic;
  C: out std_logic_vector(7 downto 0);
  BCD: out std_logic_vector(11 downto 0)
  );
end gl1_gan;

architecture Behavioral of gl1_gan is

component gl1_7ba is
port(
     A : IN  std_logic_vector(6 downto 0);
         B : IN  std_logic_vector(6 downto 0);
         c1 : IN  std_logic;
         S : OUT  std_logic_vector(6 downto 0);
         c2 : OUT  std_logic
			);
end component;

COMPONENT gl1_7bs
    PORT(
         A : IN  std_logic_vector(6 downto 0);
         B : IN  std_logic_vector(6 downto 0);
         S : OUT  std_logic_vector(6 downto 0);
         c2 : OUT  std_logic
        );
END COMPONENT;

component ql1_mul is
    Port ( A : in  STD_LOGIC_VECTOR (3 downto 0);
           B : in  STD_LOGIC_VECTOR (3 downto 0);
           ot : out  STD_LOGIC_VECTOR (6 downto 0));
end component;

component gl1_bcd is
port(
A:in std_logic_vector(7 downto 0);
B:out std_logic_vector(11 downto 0)
);
end component;

signal A_in, B_in, S_out: std_logic_vector(6 downto 0);
signal c2_out: std_logic;

signal SA_in, SB_in, SS_out: std_logic_vector(6 downto 0);
signal Sc2_out: std_logic;
signal MA_in, MB_in: std_logic_vector(3 downto 0); 
signal MS_out: std_logic_vector(6 downto 0);
signal BCD_out: std_logic_vector(11 downto 0);
signal BCD_in: std_logic_vector(7 downto 0);
begin
ADDR0: gl1_7ba port map(a => A_in, b => B_in, c1 => '0', s => S_out, c2 => c2_out );

SUBT0: gl1_7bs port map(A => SA_in, B => SB_in,s => SS_out,c2 => Sc2_out);

MULT0: ql1_mul port map(A => MA_in, B => MB_in, ot => MS_out); 

BCD0: gl1_bcd port map(A => BCD_in,B => BCD_out);
process(A,B,A_in,B_in,S_out,c2_out,SA_in,SB_in,SS_out,Sc2_out,MA_in,MB_in,MS_out,BCD_out,BCD_in)
begin
  if ((S1 = '0') and (S2 = '0')) then
       A_in <= A;
		 B_in <= B;
	    C <= c2_out & S_out;
		 BCD_IN <= c2_out & S_out;
      BCD <= BCD_out;
  elsif ((S1 = '0') and (S2 ='1')) then
       SA_in <= A; 
       SB_in <= B;
		 C <= Sc2_out & SS_out;
		 BCD_IN <= '0' & SS_out;
     BCD <= BCD_out;
   elsif ((S1 = '1') and (S2 ='0')) then
      MA_in(0) <= A(0);
		MA_in(1) <= A(1);
		MA_in(2) <= A(2);
		MA_in(3) <= A(3);
		MB_in(0) <= B(0);
		MB_in(1) <= B(1);
		MB_in(2) <= B(2);
		MB_in(3) <= B(3);
		C <= '0' & MS_out;
		BCD_IN <= '0' & MS_out;
    BCD <= BCD_out;	 
  else
      MA_in(0) <= A(0);
		MA_in(1) <= A(1);
		MA_in(2) <= A(2);
		MA_in(3) <= A(3);
		MB_in(0) <= B(0);
		MB_in(1) <= B(1);
		MB_in(2) <= B(2);
		MB_in(3) <= B(3);
		C <= '0' & MS_out;
		BCD_IN <= '0' & MS_out;
    BCD <= BCD_out;
end if;
end process;
end Behavioral;



----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- ganit test bench code


--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   17:18:18 02/06/2019
-- Design Name:   
-- Module Name:   /home/chinnu/glab1/gl1_tb_gan.vhd
-- Project Name:  glab1
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: gl1_gan
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY gl1_tb_gan IS
END gl1_tb_gan;
 
ARCHITECTURE behavior OF gl1_tb_gan IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT gl1_gan
    PORT(
         A : IN  std_logic_vector(6 downto 0);
         B : IN  std_logic_vector(6 downto 0);
         S1 : IN  std_logic;
         S2 : IN  std_logic;
         S3 : IN  std_logic;
         C : OUT  std_logic_vector(7 downto 0);
			BCD: OUT std_logic_vector(11 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal A : std_logic_vector(6 downto 0) := (others => '0');
   signal B : std_logic_vector(6 downto 0) := (others => '0');
	signal BCD : std_logic_vector(11 downto 0);
   signal S1 : std_logic := '0';
   signal S2 : std_logic := '0';
   signal S3 : std_logic := '0';
	

 	--Outputs
   signal C : std_logic_vector(7 downto 0);
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: gl1_gan PORT MAP (
          A => A,
          B => B,
          S1 => S1,
          S2 => S2,
          S3 => S3,
          C => C,
			 BCD => BCD
        );
    process
	 begin
    A <= "0001011";
    B <= "1100011";
    S1 <= '0';
	 S2 <= '0';
    wait for 1 ns;
    assert(C="01101110" and BCD="000100010000") report "Fail 0/0" severity error;

    A <= "0000111";
    B <= "0001001";
    S1 <= '1';
	 S2 <= '0';
    wait for 1 ns;
    assert(C="00111111" and BCD="000001100011") report "Fail 1/0" severity error;
	 
	 A <= "1000000";
    B <= "0111111";
    S1 <= '0';
	 S2 <= '1';
    wait for 1 ns;
    assert(C="00000001" and BCD="000000000001") report "Fail 0/1" severity error;
	 
	 A <= "0000111";
    B <= "0000111";
    S1 <= '1';
	 S2 <= '1';
    wait for 1 ns;
    assert(C="00110001" and BCD="000001001001") report "Fail 1/1" severity error;

      -- Clear inputs
    A <= "0000000";
    B <= "0000000";

    assert false report "Test done." severity note;
    wait;
		

   end process;

END;


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
